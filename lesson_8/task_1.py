"""
Task_1
Реализовать класс Matrix (матрица). Обеспечить перегрузку
конструктора класса (метод __init__()), который должен принимать
данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин,
расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
Следующий шаг — реализовать перегрузку метода __str__() для
вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации
операции сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять
поэлементно — первый элемент первой строки первой
матрицы складываем с первым элементом первой строки
второй матрицы и т.д.
"""

class Matrix:
    def __init__(self, my_list):
        self.my_list = my_list

    def __str__(self) -> str:
        for row in self.my_list:
            for i in row:
                print(f'{i:4}', end='')
            print
        return ''
    
    # Ещё реализация __str__
    # Вариант 1
    # def __str__(self):
        # return '\n'.join(map(str, self.my_list))
    
    # Враиант 2
    # def __str__(self):
    #     return str('\n'.join(['\t'.join([str(el) for el in i]) for i in self.my_list]))

    def __add__(self, other):
        for row in range(len(self.my_list)):
            for i in range(len(other.my_list[row])):
                self.my_list[row][i] = self.my_list[row][i] + other.my_list[row][i]
        return Matrix.__str__(self) 


m = Matrix([[-1, 0, 1], [-1, 0, 1], [0, 1, -1], [1, 1, -1]])
new_m = Matrix([[-2, 0, 2], [-2, 0, 2], [0, 2, -2], [2, 2, -7]])
print(m.__add__(new_m))